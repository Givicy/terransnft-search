{"version":3,"sources":["components/Terrans.js","helpers/terrans-helper.js","components/TerransNft.js","App.js","reportWebVitals.js","index.js"],"names":["Terrans","metadata","owner","message","actualTraits","_","map","trait","toLowerCase","replace","hasOwnProperty","traitCount","countBy","true","className","src","media","alt","title","onClick","lastIndexOfSlash","lastIndexOf","lengthOfUrl","length","filename","substr","axios","url","method","responseType","then","response","window","URL","createObjectURL","Blob","data","link","document","createElement","href","setAttribute","body","appendChild","click","rank","target","rel","exists","property","tokenId","terranRarity","require","digitOnlyPattern","terranOptions","terranId","getTerranIdByTitle","parseInt","getTerranRankByTitle","rarity","find","r","Rank","getTokenIdByTitle","getTokenIdByTerranId","isValidTitle","searchText","hasTerranHash","indexOf","assumedTerranId","isDigitOnly","test","intTerranId","TerransNft","navigate","useNavigate","queryId","useParams","useState","setMessage","setOwner","terranRank","getInitialSearchByValue","location","searchBy","setSearchBy","searchPlaceholder","setSearchPlaceholder","isUndefined","setSearchText","terranMetadata","setTerranMetadata","onTerranSearchSubmit","event","preventDefault","getTerran","text","id","isValidSearchText","getTokenIdByRank","getMetadataBySearchText","console","log","get","res","result","extend","catch","err","error","getOwnerOfTokenId","useEffect","onSubmit","type","value","onChange","placeholder","RadioGroup","row","name","FormControlLabel","control","Radio","label","App","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.07dccf92.chunk.js","sourcesContent":["import _ from 'underscore';\nimport { MdSave } from 'react-icons/md';\nimport axios from 'axios';\nconst Terrans = ({metadata, owner, message}) => {\n    const handleDownload = () => {\n        const lastIndexOfSlash = metadata.media.lastIndexOf('/') + 1;\n        const lengthOfUrl = metadata.media.length;\n        const filename = metadata.media.substr(lastIndexOfSlash, lengthOfUrl);\n        axios({\n            url: metadata.media,\n            method: 'GET',\n            responseType: 'blob',\n          }).then((response) => {\n            const url = window.URL.createObjectURL(new Blob([response.data]));\n            const link = document.createElement('a');\n            link.href = url;\n            link.setAttribute('download', filename);\n            document.body.appendChild(link);\n            link.click();\n          })\n    }\n\n    const actualTraits = _.map(['Armor', 'Background', 'Beard', 'Body', 'Class', 'Facial Features', 'Hair', 'Helmet', 'Logo', 'Pet', 'Sex', 'Suit'], (trait) => {\n        return {\n            'title': trait,\n            'property': trait.toLowerCase().replace(/ /g, ''),\n            'exists': metadata.hasOwnProperty(trait.toLowerCase().replace(/ /g, ''))\n        }\n    });\n\n    const traitCount = _.countBy(actualTraits, 'exists').true;\n\n    return metadata ? \n    <div className='terran'>\n        <img src={metadata.media} className='terran-img' alt='' />\n        <h3 className='terran-title'>{metadata.title}<span className='terran-download'><MdSave onClick={handleDownload}/></span></h3>\n        {\n            metadata.rank ?\n            <div>\n                <span>Rank: {metadata.rank}</span>\n            </div>\n            : ''\n        }\n        { owner ? \n                <div className='terran-detail-owner'>\n                    <a target='_blank' href={'https://finder.terra.money/mainnet/address/'+owner} rel='noreferrer'>{owner}</a>\n                </div>\n        : ''}\n        {\n            actualTraits.map((trait) => (\n                trait.exists ?\n                <div key={trait.property} className='terran-detail'>\n                    <span>{trait.title}: </span>\n                    <span className={'float-right terran-detail-'+trait.property}>{metadata[trait.property]}</span>\n                </div>\n                : ''\n            ))\n        }\n        {\n            metadata.tokenId ?\n            <div className='terran-detail'>\n                <span>Token Id: </span>\n                <span className='float-right terran-detail-token-id'>{metadata.tokenId}</span>\n            </div>\n            : ''\n        }\n        <div className='terran-detail'>\n            <span>Traits: </span>\n            <span className='float-right terran-detail-traits'>{traitCount}</span>\n        </div>\n    </div>\n    : \n    <div>\n        {message}\n    </div>\n};\nexport default Terrans;","import _ from 'underscore';\n\nconst terranRarity = require('../data/terrans-rarity.json');\nconst digitOnlyPattern = /^[0-9]+$/;\n\nexport const terranOptions = {\n  terranId: 'terranId',\n  tokenId: 'tokenId',\n  rank: 'rank'\n}\n\nexport const getInitialSearchByValue = (href) => {\n  if(href){\n    if(href.toLowerCase().indexOf('terransnft/tokenid/') > 0) {\n      return terranOptions.tokenId;\n    }\n    if(href.toLowerCase().indexOf('terransnft/rank/') > 0) {\n      return terranOptions.terranRank;\n    }\n  }\n  return terranOptions.terranId;\n}\n\nexport const getTerranIdByTitle = (title) => {\n    return parseInt(title.toLowerCase().replace('terran #', ''));\n}\n\nexport const getTerranRankByTitle = (title) => {\n  const terranId = getTerranIdByTitle(title);\n  const rarity = _.find(terranRarity, (r) => {\n    return terranId < 1000 \n    ? r.title.toLowerCase() === 'terran #' + terranId\n    : r.title.toLowerCase() === title.toLowerCase();\n  });\n  return rarity ? rarity.Rank : 'N/A';\n}\n\nexport const getTokenIdByRank = (rank) => {\n  let tokenId = -1;\n  const rarity = _.find(terranRarity, (r) => {\n    return r.Rank === parseInt(rank);\n  });\n  if(rarity){\n    tokenId = getTokenIdByTitle(rarity.title);\n  }\n  return tokenId;\n}\n\nexport const getTokenIdByTitle = (title) => {\n    return getTokenIdByTerranId(getTerranIdByTitle(title));\n}\n\nexport const getTokenIdByTerranId = (terranId) => {\n    terranId = parseInt(terranId);\n    let tokenId = -1;\n    if(terranId > 0 && terranId <=10000){\n      if(terranId > 5000){\n        tokenId = terranId - 5001;\n      }else{\n        tokenId = terranId + 4999;\n      }\n    }\n    return tokenId;\n}\n\nexport const isValidSearchText = (searchText) => {\n  let id = -1;\n  if(typeof searchText === 'string'){\n    const isDigits = digitOnlyPattern.test(searchText);\n      if(isDigits){\n        id = parseInt(searchText);\n    } else {\n      const isValidByTitle = isValidTitle(searchText);\n      if(isValidByTitle){\n        id = getTokenIdByTitle(searchText);\n      }\n    }\n  }\n\n  if(typeof searchText === 'number'){\n    id = parseInt(searchText);\n  }\n  \n  return id >= 0 && id <= 10000;\n}\n\nexport const isValidTitle = (searchText) => {\n  const hasTerranHash = searchText.toLowerCase().indexOf('terran #') === 0;\n  const assumedTerranId = searchText.toLowerCase().replace('terran #', '');\n  const isDigitOnly = digitOnlyPattern.test(assumedTerranId);\n  const intTerranId = parseInt(assumedTerranId);\n  var isInRange = intTerranId > 0 && intTerranId <=10000;\n  return hasTerranHash && isInRange && isDigitOnly;\n}\n\nexport const isValidTokenId = (id) => {\n  const isDigitOnly = digitOnlyPattern.test(id);\n  return isDigitOnly && id >= 0 && id < 10000;\n}","import axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport {\n  useNavigate  \n  , useParams\n} from \"react-router-dom\";\nimport { \n  FormControlLabel \n  , Radio \n  , RadioGroup\n} from '@mui/material';\nimport _ from 'underscore';\nimport Terrans from './Terrans';\nimport { MdSearch } from 'react-icons/md';\nimport { \n  getInitialSearchByValue\n  , getTerranIdByTitle\n  , getTerranRankByTitle\n  , getTokenIdByRank\n  , getTokenIdByTerranId\n  , getTokenIdByTitle\n  , isValidSearchText\n  , isValidTitle \n  , isValidTokenId\n  , terranOptions\n} from '../helpers/terrans-helper';\n\nfunction TerransNft() {\n  const navigate = useNavigate();\n  const { queryId } = useParams();\n  \n  const [message, setMessage] = useState('');\n  const [owner, setOwner] = useState('');\n  const [searchBy, setSearchBy] = useState(getInitialSearchByValue(window.location.href));\n  const [searchPlaceholder, setSearchPlaceholder] = useState('Terran #XXXXX or XXXXX')\n  const [searchText, setSearchText] = useState(_.isUndefined(queryId) ? '' : queryId);\n  const [terranMetadata, setTerranMetadata] = useState('');\n\n  const onChangeSearchTextHandler = event => {\n    setSearchText(event.target.value);\n  };\n\n  const onTerranSearchSubmit = event => {\n    event.preventDefault();\n    getTerran();\n  }\n\n  const onSearchByChange = event => {\n    setSearchBy(event.target.value);\n    \n    setSearchPlaceholder(event.target.value === terranOptions.terranId ? 'Terran #XXXXX or XXXXX' : 'XXXXX');\n  }\n\n  const getTerran = (text) => {\n    text = text ?? searchText;\n    setTerranMetadata('');\n    if(isValidSearchText(text)){\n      setMessage('loading...');\n      let tokenId = -1;\n\n      switch(searchBy){\n        case terranOptions.rank: {\n          tokenId = getTokenIdByRank(text);\n          navigate('/terransnft/rank/' + text);\n          break;\n        }\n        case terranOptions.tokenId:{\n          if(isValidTokenId(text)){\n            tokenId = parseInt(text);\n            navigate('/terransnft/tokenid/' + tokenId);\n          } else {\n            setMessage('Terran not found!');\n            return;\n          }\n          break;\n        }\n        case terranOptions.terranId:{\n          if(isValidTitle(text)){\n            tokenId = getTokenIdByTitle(text);\n            navigate('/terransnft/terran/' + getTerranIdByTitle(text));\n          }else{\n            tokenId = getTokenIdByTerranId(text);\n            navigate('/terransnft/terran/' + text);\n          }\n          break;\n        }\n        default: break;\n      }\n\n      if(tokenId >= 0){\n        getMetadataBySearchText(tokenId);\n        return;\n      }\n    }\n    setMessage('Terran not found!');\n  }\n\n  const getMetadataBySearchText = (tokenId) => {\n    const message = 'fetching token image by token id '+ tokenId;\n    console.log(message);\n\n    const url = 'https://fcd.terra.dev/wasm/contracts/terra10f6n78sx84937kcqrthf2gkfxgfjgmxpqrlug7/store?query_msg=%7B%22metadata_u_r_i%22:%7B%22token_id%22:%22'+tokenId+'%22%7D%7D';\n    axios.get(url).then(res =>{\n      if(res && res.data){\n        axios.get(res.data.result\n          ).then(res =>{\n            _.extend(res.data, { \n              tokenId: tokenId \n              , rank: getTerranRankByTitle(res.data.title)\n            });\n            setTerranMetadata(res.data);\n          });\n      }\n    }).catch(err =>{\n      console.error(err);\n    });\n\n    getOwnerOfTokenId(tokenId);\n  }\n\n  const getOwnerOfTokenId = (tokenId) => {\n    const url = 'https://fcd.terra.dev/wasm/contracts/terra10f6n78sx84937kcqrthf2gkfxgfjgmxpqrlug7/store?query_msg=%7B%22owner_of%22:%7B%22token_id%22:%22'+tokenId+'%22%7D%7D';\n    axios.get(url).then(res =>{\n      if(res && res.data && res.data.result && res.data.result.owner){\n        setOwner(res.data.result.owner);\n      }\n    }).catch(err =>{\n      console.error(err);\n    });\n  }\n\n  useEffect(() => {\n    if(!_.isUndefined(queryId)){\n      getTerran(queryId);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[queryId]);\n\n  return (\n    <header className='App-header'>\n      <form onSubmit={onTerranSearchSubmit}>\n        <div className='search-box'>  \n          <input type='text' className='token-id' value={searchText} onChange={onChangeSearchTextHandler} placeholder={searchPlaceholder} />\n          <div id='search-by'>\n          <RadioGroup row aria-label=\"search-by\" name=\"search-by-radio-buttons-group\" value={searchBy} onChange={onSearchByChange}>\n            <FormControlLabel value={terranOptions.terranId} control={<Radio />} label=\"Terran Number\" />\n            <FormControlLabel value={terranOptions.tokenId} control={<Radio />} label=\"Token Id\" />\n            <FormControlLabel value={terranOptions.rank} control={<Radio />} label=\"Rank\" />\n          </RadioGroup>\n          </div>\n          <button id='submitRequest' type='submit'>Search</button>\n          <span id='md-search' >\n            <MdSearch onClick={onTerranSearchSubmit}/>\n          </span>\n        </div>\n      </form>\n      <Terrans metadata={terranMetadata} owner={owner} message={message} />\n    </header>\n  );\n}\n\nexport default TerransNft;\n","import {\n  BrowserRouter as Router,\n  Route,\n  Routes\n} from \"react-router-dom\";\nimport TerransNft from './components/TerransNft';\nimport './App.css';\n\nfunction App() {\n\n  return (\n    <Router>\n      <div className='App'>\n        <Routes>\n          <Route path='/' element={<TerransNft/>} />\n          <Route path='/terransnft' element={<TerransNft/>} />\n          <Route path='/terransnft/terran/:queryId' element={<TerransNft/>} />\n          <Route path='/terransnft/tokenid/:queryId' element={<TerransNft/>} />\n          <Route path='/terransnft/rank/:queryId' element={<TerransNft/>} />\n        </Routes>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}