{"version":3,"sources":["components/Terrans.js","helpers/terrans-helper.js","components/TerransNft.js","App.js","reportWebVitals.js","index.js"],"names":["Terrans","metadata","message","owner","actualTraits","_","map","trait","toLowerCase","replace","hasOwnProperty","traitCount","countBy","true","className","src","media","alt","Typography","variant","gutterBottom","component","title","onClick","lastIndexOfSlash","lastIndexOf","lengthOfUrl","length","filename","substr","axios","url","method","responseType","then","response","window","URL","createObjectURL","Blob","data","link","document","createElement","href","setAttribute","body","appendChild","click","rank","previousRank","exists","property","tokenId","terranRarity","require","terranRarityV1","digitOnlyPattern","terranOptions","getTerranIdByTitle","version","assumedTerranId","parseInt","isUndefined","padZeros","toString","getPlaceholder","searchBy","placeholder","getTerranRankByTitle","terranId","rarity","find","getTerranRaritySource","r","TerranName","Rank","getTokenIdByTitle","getTokenIdByTerranId","isValidTitle","searchText","hasTerranHash","indexOf","isDigitOnly","test","intTerranId","number","digits","i","TerransNft","navigate","useNavigate","queryId","useParams","useState","setMessage","setOwner","getInitialSearchByValue","location","setSearchBy","searchPlaceholder","setSearchPlaceholder","setSearchText","terranMetadata","setTerranMetadata","onTerranSearchSubmit","event","preventDefault","getTerran","text","id","trim","isValidSearchText","linkParameter","getTokenIdByRank","getMetadataBySearchText","console","log","get","res","result","extend","catch","err","error","getOwnerOfTokenId","useEffect","onSubmit","TextField","fullWidth","label","value","onChange","target","RadioGroup","row","name","FormControlLabel","control","Radio","type","ReactGA","initialize","pageview","pathname","search","App","darkTheme","createTheme","palette","mode","ThemeProvider","theme","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5a322bc8.chunk.js","sourcesContent":["import _ from 'underscore';\nimport { MdSave } from 'react-icons/md';\nimport axios from 'axios';\nimport Typography from '@mui/material/Typography';\nconst Terrans = ({metadata, owner, message}) => {\n    const handleDownload = () => {\n        const lastIndexOfSlash = metadata.media.lastIndexOf('/') + 1;\n        const lengthOfUrl = metadata.media.length;\n        const filename = metadata.media.substr(lastIndexOfSlash, lengthOfUrl);\n        axios({\n            url: metadata.media,\n            method: 'GET',\n            responseType: 'blob',\n          }).then((response) => {\n            const url = window.URL.createObjectURL(new Blob([response.data]));\n            const link = document.createElement('a');\n            link.href = url;\n            link.setAttribute('download', filename);\n            document.body.appendChild(link);\n            link.click();\n          })\n    }\n\n    const actualTraits = _.map(['Armor', 'Background', 'Beard', 'Body', 'Class', 'Facial Features', 'Hair', 'Helmet', 'Logo', 'Pet', 'Sex', 'Suit'], (trait) => {\n        return {\n            'title': trait,\n            'property': trait.toLowerCase().replace(/ /g, ''),\n            'exists': metadata.hasOwnProperty(trait.toLowerCase().replace(/ /g, ''))\n        }\n    });\n\n    const traitCount = _.countBy(actualTraits, 'exists').true;\n\n    return metadata ? \n    <div className='terran'>\n        <img src={metadata.media} className='terran-img' alt='' />\n        <Typography variant=\"h4\" gutterBottom component=\"div\">\n            {metadata.title}<span className='terran-download'><MdSave onClick={handleDownload}/></span>\n        </Typography>\n        {\n            metadata.rank ?\n            <Typography variant=\"h5\" gutterBottom component=\"div\">\n                <span>Rank: {metadata.rank}</span>\n            </Typography>\n            : ''\n        }\n        {\n            metadata.previousRank ?\n            <Typography variant=\"subtitle1\" gutterBottom component=\"div\">\n                <span>Previous Rank: {metadata.previousRank}</span>\n            </Typography>\n            : ''\n        }\n        {/* { owner ? \n            <Typography variant=\"subtitle2\" gutterBottom component=\"div\" className='terran-detail-owner'>\n                <a target='_blank' href={'https://finder.terra.money/mainnet/address/'+owner} rel='noreferrer'>{owner}</a>\n            </Typography>\n        : ''} */}\n        {\n            actualTraits.map((trait) => (\n                trait.exists ?\n                <div key={trait.property} className='terran-detail'>\n                    <span>{trait.title}: </span>\n                    <span className={'float-right terran-detail-'+trait.property}>{metadata[trait.property]}</span>\n                </div>\n                : ''\n            ))\n        }\n        {\n            metadata.tokenId ?\n            <div className='terran-detail'>\n                <span>Token Id: </span>\n                <span className='float-right terran-detail-token-id'>{metadata.tokenId}</span>\n            </div>\n            : ''\n        }\n        <div className='terran-detail'>\n            <span>Traits: </span>\n            <span className='float-right terran-detail-traits'>{traitCount}</span>\n        </div>\n    </div>\n    : \n    <div>\n        {message}\n    </div>\n};\nexport default Terrans;","import _ from 'underscore';\n\nconst terranRarity = require('../data/terrans-rarity.json');\nconst terranRarityV1 = require('../data/terrans-rarity-v1.json');\nconst digitOnlyPattern = /^[0-9]+$/;\n\nexport const homePage = 'terransnft-search';\n\nexport const terranOptions = {\n  terran: 'terran',\n  tokenId: 'tokenId',\n  rank: 'rank'\n}\n\nexport const generateSearchByLink = (href, option) => {\n  return '/'+ option.toLowerCase() + '/';\n}\n\nexport const getInitialSearchByValue = (href) => {\n  let searchBy = terranOptions.terran;\n  if(href){\n    if(href.toLowerCase().indexOf('#/tokenid/') > 0) {\n      searchBy = terranOptions.tokenId;\n    }\n    if(href.toLowerCase().indexOf('#/rank/') > 0) {\n      searchBy = terranOptions.rank;\n    }\n  }\n  return searchBy;\n}\n\nexport const getTerranIdByTitle = (title, version) => {\n  const assumedTerranId = parseInt(title.toLowerCase().replace('terran #', ''));\n  return _.isUndefined(version) \n  ? padZeros(assumedTerranId, 4) \n  : parseInt(assumedTerranId).toString();\n}\n\nexport const getTerranRaritySource = (version) => {\n  const source = !_.isUndefined(version)\n  ? version === 'v1' \n  ? terranRarityV1\n  : terranRarity\n  : terranRarity;\n  return source;\n}\n\nexport const getPlaceholder = (searchBy) => {\n  let placeholder;\n  switch(searchBy){\n    case terranOptions.tokenId: {\n      placeholder = '0 up to 9999';\n      break;\n    }\n    case terranOptions.rank: {\n      placeholder = '1 up to 10000';\n      break;\n    }\n    default:{\n      placeholder = 'Terran #XXXXX / 1 up to 10000';\n      break;\n    }\n  }\n  return placeholder;\n}\n\nexport const getTerranRankByTitle = (title, version) => {\n  const terranId = getTerranIdByTitle(title, version);\n  const rarity = _.find(getTerranRaritySource(version), (r) => {\n    return terranId < 1000 \n    ? r.TerranName.toLowerCase() === 'terran #' + terranId\n    : r.TerranName.toLowerCase() === title.toLowerCase();\n  });\n  return rarity ? rarity.Rank : 'N/A';\n}\n\nexport const getTokenIdByRank = (rank) => {\n  let tokenId = -1;\n  const rarity = _.find(terranRarity, (r) => {\n    return r.Rank === parseInt(rank);\n  });\n  if(rarity){\n    tokenId = getTokenIdByTitle(rarity.TerranName);\n  }\n  return tokenId;\n}\n\nexport const getTokenIdByTitle = (title) => {\n    return getTokenIdByTerranId(getTerranIdByTitle(title));\n}\n\nexport const getTokenIdByTerranId = (terranId) => {\n    terranId = parseInt(terranId);\n    let tokenId = -1;\n    if(terranId > 0 && terranId <=10000){\n      if(terranId > 5000){\n        tokenId = terranId - 5001;\n      }else{\n        tokenId = terranId + 4999;\n      }\n    }\n    return tokenId;\n}\n\nexport const isValidSearchText = (searchText) => {\n  let id = -1;\n  if(typeof searchText === 'string'){\n    const isDigits = digitOnlyPattern.test(searchText);\n      if(isDigits){\n        id = parseInt(searchText);\n    } else {\n      const isValidByTitle = isValidTitle(searchText);\n      if(isValidByTitle){\n        id = getTokenIdByTitle(searchText);\n      }\n    }\n  }\n\n  if(typeof searchText === 'number'){\n    id = parseInt(searchText);\n  }\n  \n  return id >= 0 && id <= 10000;\n}\n\nexport const isValidTitle = (searchText) => {\n  const hasTerranHash = searchText.toLowerCase().indexOf('terran #') === 0;\n  const assumedTerranId = searchText.toLowerCase().replace('terran #', '');\n  const isDigitOnly = digitOnlyPattern.test(assumedTerranId);\n  const intTerranId = parseInt(assumedTerranId);\n  var isInRange = intTerranId > 0 && intTerranId <=10000;\n  return hasTerranHash && isInRange && isDigitOnly;\n}\n\nexport const isValidTokenId = (id) => {\n  const isDigitOnly = digitOnlyPattern.test(id);\n  return isDigitOnly && id >= 0 && id < 10000;\n}\n\nexport const padZeros = (number, digits) => {\n  if(number){\n    for(var i = number.toString().length; i < digits;i++){\n      number = '0' + number;\n    }\n  }\n  return number.toString();\n}","import axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport {\n  useNavigate  \n  , useParams\n} from \"react-router-dom\";\nimport { \n  FormControlLabel \n  , Radio \n  , RadioGroup\n  , TextField\n} from '@mui/material';\nimport _ from 'underscore';\nimport Terrans from './Terrans';\nimport { MdSearch } from 'react-icons/md';\nimport { \n  generateSearchByLink\n  , getInitialSearchByValue\n  , getPlaceholder\n  , getTerranIdByTitle\n  , getTerranRankByTitle\n  , getTokenIdByRank\n  , getTokenIdByTerranId\n  , getTokenIdByTitle\n  , isValidSearchText\n  , isValidTitle \n  , isValidTokenId\n  , terranOptions\n} from '../helpers/terrans-helper';\n\nfunction TerransNft() {\n  const navigate = useNavigate();\n  const { queryId } = useParams();\n  \n  const [message, setMessage] = useState('');\n  const [owner, setOwner] = useState('');\n  const [searchBy, setSearchBy] = useState(getInitialSearchByValue(window.location.href));\n  const [searchPlaceholder, setSearchPlaceholder] = useState(getPlaceholder(searchBy));\n  const [searchText, setSearchText] = useState(_.isUndefined(queryId) ? '' : queryId);\n  const [terranMetadata, setTerranMetadata] = useState('');\n\n  const onChangeSearchTextHandler = event => {\n    setSearchText(event.target.value);\n  };\n\n  const onTerranSearchSubmit = event => {\n    event.preventDefault();\n    getTerran();\n  }\n\n  const onSearchByChange = event => {\n    setSearchBy(event.target.value);\n    setSearchPlaceholder(getPlaceholder(event.target.value));\n  }\n\n  const getTerran = (text) => {\n    text = text ?? searchText;\n    text = text.trim();\n    setTerranMetadata('');\n    if(isValidSearchText(text)){\n      setMessage('loading...');\n      let tokenId = -1;\n\n      const link = generateSearchByLink(window.location.href, searchBy);\n      let linkParameter = text;\n      switch(searchBy){\n        case terranOptions.rank: {\n          tokenId = getTokenIdByRank(text);\n          break;\n        }\n        case terranOptions.tokenId:{\n          if(isValidTokenId(text)){\n            tokenId = parseInt(text);\n            linkParameter = tokenId;\n          } else {\n            setMessage('Terran not found!');\n            return;\n          }\n          break;\n        }\n        case terranOptions.terran:{\n          if(isValidTitle(text)){\n            tokenId = getTokenIdByTitle(text);\n            linkParameter = getTerranIdByTitle(text);\n          }else{\n            tokenId = getTokenIdByTerranId(text);\n          }\n          break;\n        }\n        default: break;\n      }\n\n      if(window.location.href.indexOf(link + linkParameter) < 0){\n        navigate(link + linkParameter);\n      }\n\n      if(tokenId >= 0){\n        getMetadataBySearchText(tokenId);\n        return;\n      }\n    }\n    setMessage('Terran not found!');\n  }\n\n  const getMetadataBySearchText = (tokenId) => {\n    const message = 'fetching token image by token id '+ tokenId;\n    console.log(message);\n\n    const url = 'https://fcd.terra.dev/wasm/contracts/terra10f6n78sx84937kcqrthf2gkfxgfjgmxpqrlug7/store?query_msg=%7B%22metadata_u_r_i%22:%7B%22token_id%22:%22'+tokenId+'%22%7D%7D';\n    axios.get(url).then(res =>{\n      if(res && res.data){\n        axios.get(res.data.result\n          ).then(res =>{\n            _.extend(res.data, { \n              tokenId: tokenId \n              , rank: getTerranRankByTitle(res.data.title)\n              , previousRank: getTerranRankByTitle(res.data.title, 'v1')\n            });\n            setTerranMetadata(res.data);\n          });\n      }\n    }).catch(err =>{\n      console.error(err);\n    });\n\n    getOwnerOfTokenId(tokenId);\n  }\n\n  const getOwnerOfTokenId = (tokenId) => {\n    const url = 'https://fcd.terra.dev/wasm/contracts/terra10f6n78sx84937kcqrthf2gkfxgfjgmxpqrlug7/store?query_msg=%7B%22owner_of%22:%7B%22token_id%22:%22'+tokenId+'%22%7D%7D';\n    axios.get(url).then(res =>{\n      if(res && res.data && res.data.result && res.data.result.owner){\n        setOwner(res.data.result.owner);\n      }\n    }).catch(err =>{\n      console.error(err);\n    });\n  }\n\n  useEffect(() => {\n    if(!_.isUndefined(queryId)){\n      getTerran(queryId);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[queryId]);\n\n  return (\n    <header className='App-header'>\n      <form onSubmit={onTerranSearchSubmit}>\n        <div className='search-box'>\n          <div id='search-by'>\n          <TextField fullWidth  className=\"search-text-field\" label={searchPlaceholder} value={searchText} onChange={onChangeSearchTextHandler} variant=\"standard\" />\n          <RadioGroup row aria-label=\"search-by\" name=\"search-by-radio-buttons-group\" value={searchBy} onChange={onSearchByChange}>\n            <FormControlLabel value={terranOptions.terran} control={<Radio />} label=\"Terran Number\" />\n            <FormControlLabel value={terranOptions.tokenId} control={<Radio />} label=\"Token Id\" />\n            <FormControlLabel value={terranOptions.rank} control={<Radio />} label=\"Rank\" />\n          </RadioGroup>\n          </div>\n          <button id='submitRequest' type='submit'>Search</button>\n          <span id='md-search' >\n            <MdSearch onClick={onTerranSearchSubmit}/>\n          </span>\n        </div>\n      </form>\n      <Terrans metadata={terranMetadata} owner={owner} message={message} />\n    </header>\n  );\n}\n\nexport default TerransNft;\n","import {\n  HashRouter as Router,\n  Route,\n  Routes\n} from \"react-router-dom\";\nimport { \n  ThemeProvider\n  , createTheme\n} from '@mui/material/styles';\nimport ReactGA from 'react-ga';\nimport TerransNft from './components/TerransNft';\nimport { \n  terranOptions\n} from './helpers/terrans-helper';\nimport './App.css';\n\nReactGA.initialize('UA-215931387-1');\nReactGA.pageview(window.location.pathname + window.location.search);\n\nfunction App() {\n  const darkTheme = createTheme({\n    palette: {\n      mode: 'dark'\n    },\n  });\n  return (\n    <Router>\n      <ThemeProvider theme={darkTheme}>\n        <div className='App'>\n          <Routes>\n            <Route path='/' element={<TerransNft/>} />\n            <Route path={'/' + terranOptions.terran + '/:queryId'} element={<TerransNft/>} />\n            <Route path={'/' + terranOptions.tokenId + '/:queryId'} element={<TerransNft/>} />\n            <Route path={'/' + terranOptions.rank + '/:queryId'} element={<TerransNft/>} />\n          </Routes>\n        </div>\n      </ThemeProvider>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}